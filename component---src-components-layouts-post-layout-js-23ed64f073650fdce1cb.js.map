{"version":3,"sources":["webpack:///./src/styles/type/lists.js","webpack:///./src/styles/button/more-link.js","webpack:///./src/components/layouts/post-layout.js","webpack:///./src/styles/card.js","webpack:///./src/styles/inpage.js"],"names":["Dl","styled","dl","horizontal","css","headingAlt","divide","themeVal","boldDesc","SquareUl","ul","pseudoMapping","forward","back","paddingMapping","arrowDirection","MoreLink","Link","direction","defaultProps","PostHeadline","InpageHeadline","media","mediumUp","PostBody","article","PostMeta","aside","PostLayout","data","location","post","frontmatter","prevPath","state","prevPage","title","columnLayout","to","startsWith","size","variation","className","dangerouslySetInnerHTML","__html","html","author","tags","map","tag","key","query","getCardBorder","border","Card","glsp","_lighten","withHover","CardHeader","div","CardHeading","Heading","CardList","listReset","smallUp","largeUp","Inpage","InpageInnerColumns","Constrainer","InpageHeader","header","isHidden","visuallyHidden","InpageHeaderInner","InpageTitle","props","InpageBody","p","section","InpageBodyInner"],"mappings":"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","file":"component---src-components-layouts-post-layout-js-23ed64f073650fdce1cb.js","sourcesContent":["import styled, { css } from \"styled-components\"\n\nimport { divide } from \"../utils/math\"\nimport { themeVal } from \"../utils/general\"\nimport { headingAlt } from \"./heading\"\n\nconst Dl = styled.dl`\n  margin: 0;\n  font-feature-settings: \"pnum\" 0; /* Use proportional numbers */\n  ${({ horizontal }) =>\n    horizontal &&\n    css`\n      display: grid;\n      grid-template-columns: auto 1fr;\n      gap: 1rem;\n    `}\n  dt {\n    ${headingAlt()}\n    margin: 0 0 ${divide(themeVal(\"layout.space\"), 4)} 0;\n  }\n\n  dd {\n    margin: 0 0 ${themeVal(\"layout.space\")} 0;\n    ${({ boldDesc }) =>\n      boldDesc &&\n      css`\n        font-weight: bold;\n      `}\n  }\n  dd + dd {\n    margin-top: -1rem;\n  }\n`\n\nexport default Dl\n\nexport const SquareUl = styled.ul`\n  &,\n  > ul,\n  > ul > ul {\n    padding-left: 1rem;\n  }\n  li {\n    list-style: none;\n    text-indent: -1.8rem;\n    margin-left: ${themeVal(\"layout.space\")};\n    margin-bottom: 0.25rem;\n    &:before {\n      content: \"\\\\25A0\";\n      font-size: 1.5rem;\n      vertical-align: baseline;\n      list-style-position: inherit;\n      margin-right: ${themeVal(\"layout.space\")};\n    }\n  }\n  li>p {\n    &:before {\n      content: '';\n    }\n    &:first-child {\n      display: inline;\n      text-indent: -1.8rem;\n    }\n  }\n  pre {\n    text-indent: 0;\n  }\n  table {\n    margin: 2rem 0;\n    font-size: 0.875rem;\n    text-align: left;\n    thead tr {\n      background-color: ${themeVal(\"color.primary\")};\n      color: ${themeVal(\"color.surface\")};\n    }\n\n    tbody tr:nth-child(odd) {\n      background-color: ${themeVal(\"color.mist\")};\n    }\n\n    th, td {\n      padding: 0.25rem 0.5rem;\n      border-right: 2px solid white;\n    }\n  }\n`\n\nexport const TagList = styled.dl``\n","import { Link } from \"gatsby\"\nimport styled, { css } from \"styled-components\"\nimport { themeVal } from \"../utils/general\"\n\nconst pseudoMapping = {\n  forward: \"after\",\n  back: \"before\",\n}\n\nconst paddingMapping = {\n  forward: \"left\",\n  back: \"right\",\n}\n\nconst arrowDirection = {\n  forward: \"\\\\27F6\",\n  back: \"\\\\27F5\",\n}\n\nconst MoreLink = styled(Link)`\n  color: inherit;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-feature-settings: \"pnum\" 0; /* Use proportional numbers */\n  font-family: ${themeVal(\"type.heading.family\")};\n  font-weight: ${themeVal(\"type.heading.light\")};\n  text-transform: uppercase;\n  letter-spacing: 0.025rem;\n\n  /* Arrow before or after attribute */\n  ${({ direction }) => \n    direction && css`\n    &:${pseudoMapping[direction]} {\n      padding-${paddingMapping[direction]}: 0.5rem;\n      content: '${arrowDirection[direction]}';\n      transition: all 0.16s cubic-bezier(.55,.085,.68,.53);\n    }\n    &:hover {\n      &:${pseudoMapping[direction]} {\n        padding-${paddingMapping[direction]}: 1rem;\n      }\n    }\n    &:hover,\n    &:active {\n      &:${pseudoMapping[direction]} {\n        transform: none;\n      }\n    }\n  `}\n\n  /* Remove global link :after styles */\n  &:after {\n    opacity: 1;\n    transform: none;\n    left: inherit;\n    bottom: inherit;\n    height: inherit;\n    background: inherit;\n  }\n`\n\nMoreLink.defaultProps = {\n  direction: \"forward\",\n}\n\nexport default MoreLink\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport GlobalLayout from \"./global-layout\"\nimport SEO from \"../seo\"\n\nimport {\n  Inpage,\n  InpageInnerColumns,\n  InpageHeader,\n  InpageHeadline,\n  InpageBody,\n  InpageTitle,\n} from \"../../styles/inpage\"\n\nimport MoreLink from \"../../styles/button/more-link\"\nimport Dl from \"../../styles/type/lists\"\nimport media from \"../../styles/utils/media-queries\"\n\nconst PostHeadline = styled(InpageHeadline)`\n  ${media.mediumUp`\n    grid-column: span 2;\n  `}\n`\n\nconst PostBody = styled.article`\n  display: flex;\n  flex-flow: column nowrap;\n  p > img {\n    display: block;\n    margin: 1rem auto;\n    max-width: 100%;\n  }\n`\n\nconst PostMeta = styled.aside``\n\nfunction PostLayout({ data, location }) {\n  const post = data.post\n  const frontmatter = data.post.frontmatter\n  // const frontmattermd = data.post.fields.frontmattermd\n\n  // Get previous page path, if available\n  let prevPath = location.state && location.state.prevPath || \"\"\n  let prevPage = location.state && location.state.prevPage || \"\"\n\n  // Fix images URL by adding app root url with prefix\n  /*\n  const sections = mapValues(frontmatter, section => {\n    if (section && section.html) {\n      return section.html.replace(\n        /<img src=\"\\/img/g,\n        `<img src=\"${withPrefix(\"/img\")}`\n      )\n    }\n    return section\n  })\n  */\n\n  return (\n    <GlobalLayout>\n      <SEO title={`Post: ` + frontmatter.title} />\n      <Inpage>\n        <InpageHeader>\n          <InpageInnerColumns columnLayout=\"2:1\">\n            <PostHeadline>\n              <MoreLink\n                direction=\"back\"\n                to={\n                  prevPath.startsWith(\"/guide-builder\")\n                    ? prevPage\n                    : \"/posts/\"\n                }\n              >\n                Back to {prevPath ? \"the home page\" : \"the blog index\"}\n              </MoreLink>\n              <InpageTitle size=\"jumbo\" variation=\"primary\">\n                {frontmatter.title}\n              </InpageTitle>\n            </PostHeadline>\n            <PostBody>\n              <div className=\"blog-post-content\"\n                   dangerouslySetInnerHTML={{ __html: post.html }}\n              />\n            </PostBody>\n            <PostMeta>\n              <Dl boldDesc>\n                <dt>Author</dt>\n                <dd>{frontmatter.author}</dd>\n              </Dl>\n              <Dl>\n                <dt>Tags</dt>\n                {frontmatter.tags.map(tag => (\n                  <dd key={tag}>{tag}</dd>\n                ))}\n              </Dl>\n            </PostMeta>\n          </InpageInnerColumns>\n        </InpageHeader>\n        <InpageBody>\n        </InpageBody>\n      </Inpage>\n    </GlobalLayout>\n  )\n}\n\nPostLayout.propTypes = {\n  data: PropTypes.object,\n  location: PropTypes.object,\n}\n\nexport default PostLayout\n\nexport const query = graphql`\n  query($slug: String!) {\n    post: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        author\n        date\n        tags\n        main_image\n        main_image_caption\n        draft\n      }\n    }\n  }\n`\n","import styled, { css } from \"styled-components\"\nimport { themeVal } from \"./utils/general\"\nimport media from \"./utils/media-queries\"\nimport { glsp, _lighten } from \"./utils/theme-values\"\nimport { listReset } from \"./helpers/index\"\nimport Heading from \"./type/heading\"\n\nconst getCardBackground = ({ variation }) => {\n  if (variation === \"base\") return _lighten(0.75, themeVal(\"color.base\"))\n  if (variation === \"primary\") return _lighten(0.5, themeVal(\"color.primary\"))\n  if (variation === \"secondary\")\n    return _lighten(0.525, themeVal(\"color.secondary\"))\n  if (variation === \"white\") return _lighten(themeVal(0.5, \"color.surface\"))\n  if (variation === \"outline\") return \"transparent\"\n  return \"white\"\n}\n\nconst getCardBorder = ({ border }) => {\n  if (border === \"base\") return themeVal(\"color.base\")\n  if (border === \"primary\") return themeVal(\"color.primary\")\n  if (border === \"secondary\") return themeVal(\"color.secondary\")\n  if (border === \"white\") return themeVal(\"color.surface\")\n  return \"inherit\"\n}\n\nconst Card = styled.article`\n  padding: ${glsp(2)} ${glsp(1.5)};\n  display: flex;\n  flex-flow: column;\n  color: ${themeVal(\"color.base\")};\n  background: ${getCardBackground};\n  position: relative;\n  ${({ border }) =>\n    border &&\n    css`\n      border: 2px solid ${getCardBorder};\n    `}\n  & > :last-child:not(:first-child) {\n    padding-top: ${glsp(2)};\n  }\n  &:visited {\n    color: ${themeVal(\"color.base\")};\n  }\n  a,\n  a:visited {\n    color: ${themeVal(\"color.link\")};\n  }\n\n  h1, h2, h3 {\n    margin: 0;\n  }\n  /* offset box outline on hover style requires 'withHover' prop */\n  ${({ withHover }) =>\n    withHover &&\n    css`\n      &:after {\n        position: absolute;\n        content: \"\";\n        opacity: 0;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        z-index: -1;\n        border: 2px solid ${getCardBorder};\n        background: none;\n        transition: all 0.16s cubic-bezier(0.55, 0.085, 0.68, 0.53);\n      }\n      &:hover {\n        &:after {\n          opacity: 1;\n          transform: translate(10px, 10px);\n          transition-delay: 0.08s;\n        }\n      }\n    `}\n`\n\nexport default Card\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: flex-start;\n  img {\n    max-height: 2rem;\n    margin-right: 1rem;\n  }\n  h1 {\n    flex: 1;\n  }\n`\n\nexport const CardHeading = styled(Heading)`\n  margin-bottom: ${glsp()};\n  position: relative;\n  letter-spacing: 0.5px;\n`\n\nexport const CardFooter = styled.div`\n  margin-top: auto;\n`\n\nexport const CardList = styled.ul`\n  ${listReset()};\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: ${glsp(2)};\n  ${Card} {\n    height: 100%;\n  }\n  li {\n    grid-column: auto / span 6;\n\n    /* Small up */\n    ${media.smallUp`\n      grid-column: auto / span 3;\n    `}\n\n    /* Large up */\n    ${media.largeUp`\n      grid-column: auto / span 2;\n    `}\n  }\n`\n","import React from \"react\"\nimport styled, { css } from \"styled-components\"\n\nimport { visuallyHidden } from \"./helpers\"\nimport { themeVal } from \"./utils/general\"\nimport { glsp } from \"./utils/theme-values\"\nimport Heading, { headingAlt } from \"./type/heading\"\nimport Constrainer from \"./constrainer\"\nimport Card from \"./card\"\nimport media from \"./utils/media-queries\"\n\nconst getColumnLayout = ({ columnLayout }) => {\n  if (columnLayout === \"1:1\") return \"1fr 1fr\"\n  if (columnLayout === \"2:1\") return \"2fr 1fr\"\n  if (columnLayout === \"3:1\") return \"3fr 1fr\"\n  return \"inherit\"\n}\n\nexport const Inpage = styled.article`\n  display: grid;\n  height: 100%;\n  grid-template-rows: auto 1fr;\n`\n\nexport const InpageInnerColumns = styled(Constrainer)`\n  display: grid;\n  grid-template-columns: 1fr;\n  padding-top: ${glsp(1)};\n  padding-bottom: ${glsp(2)};\n  ${media.mediumUp`\n    grid-template-columns: ${getColumnLayout};\n    gap: ${glsp(4)};\n    padding-top: ${glsp(2)};\n  `}\n  & > section > ${Card} {\n    margin-top: 1rem;\n    display: block;\n  }\n  & > * {\n    margin-bottom: 2rem;\n    ${media.mediumUp`\n      margin-bottom: 0;\n    `}\n  }\n`\n\nexport const InpageHeader = styled.header`\n  /* Visually hidden */\n  ${({ isHidden }) =>\n    isHidden &&\n    css`\n      ${visuallyHidden()}\n    `}\n  padding-bottom: ${glsp(2)};\n`\n\nexport const InpageHeaderInner = styled(Constrainer)`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  padding: ${glsp(4)} ${glsp()};\n`\n\nexport const InpageHeadline = styled.div`\n  display: flex;\n  flex-flow: column;\n  min-width: 0;\n  > *:first-child {\n    margin-bottom: ${glsp()};\n  }\n  > *:last-child {\n    margin-bottom: ${glsp()};\n  }\n`\n\nexport const InpageToolbar = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding-left: ${glsp(2)};\n  margin-left: auto;\n`\n\nexport const InpageTitleWrapper = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  min-width: 0;\n  margin-bottom: ${glsp(1.5)};\n`\n\nexport const InpageTitle = styled(({ ...props }) => <Heading {...props} />)`\n  margin-bottom: ${glsp(0.5)};\n  line-height: 3rem;\n`\n\nexport const InpageTagline = styled.p`\n  ${headingAlt()}\n  font-size: 0.875rem;\n  line-height: 1rem;\n`\n\nconst getBodyStyles = ({ variation }) => {\n  if (variation === \"dark\")\n    return css`\n      background-color: ${themeVal(\"color.base\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n      }\n    `\n  else if (variation === \"blue\")\n    return css`\n      background-color: ${themeVal(\"color.primary\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n        a:visited {\n          color: ${themeVal(\"color.surface\")};\n        }\n      }\n    `\n  return css`\n    background-color: transparent;\n  `\n}\n\nexport const InpageBody = styled.section`\n  ${getBodyStyles};\n  & ~ & {\n    padding-top: ${glsp(2)};\n    padding-bottom: ${glsp(2)};\n  }\n  p > img {\n    display: block;\n    margin: 1rem auto;\n    max-width: 100%;\n  }\n`\n\nexport const InpageBodyInner = styled(Constrainer)`\n  padding: ${glsp(2)} ${glsp()};\n\n  & ~ & {\n    padding: ${glsp()};\n  }\n`\n"],"sourceRoot":""}