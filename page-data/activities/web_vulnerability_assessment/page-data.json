{"componentChunkName":"component---src-components-layouts-activity-layout-js","path":"/activities/web_vulnerability_assessment","result":{"data":{"file":{"childMarkdownRemark":{"frontmatter":{"title":"Web Vulnerability Assessment","approaches":["Technical"],"authors":["SAFETAG"],"remote_options":["Complete"],"skills_required":["Website scanning","Vulnerability scanning"],"time_required_minutes":"120","organization_size_under":1000},"fields":{"frontmattermd":{"overview":{"html":"<ul>\n<li>Understand the current infrastructure the website is using on the level of the hosting provider, location, Operating system</li>\n<li>Identify the public IP address of the server you will be auditing as you will see in some cases, websites are using proxies or DDoS mitigation services that mask the real IP address of a server</li>\n<li>In the case of shared hosting, identify the hosting service and the current package</li>\n<li>Identify the web server, applications in use &#x26; plugins, themes, security protocols in place and users' session management</li>\n<li>Identify mis-configurations, sensitive information publicly available, metadata embedded within the web application</li>\n<li>Look for forgotten or insecure support applications like /phpmyadmin</li>\n<li>Run automated vulnerability scans against websites hosted by the organization to identify \"low-hanging fruits\" especially in the case of auditing an open source and common content management system or other web applications</li>\n<li>Perform manual vulnerability assessment and testing to identify server mis-configurations, web sessions, tokens etc.</li>\n</ul>"},"materials_needed":null,"considerations":{"html":"<ul>\n<li>Begin with passive techniques and consider if more detail is necessary (e.g. would simply upgrading the CMS solve multiple problems). Remember that the point is to create a clear, simple path towards security, not a comprehensive report on every possible vulnerability</li>\n<li>Seek explicit permission for vulnerability scanning - <em>NOTE:</em>  The organization might not be in a position to give you meaningful “permission” to carry out an active remote assessment of \"cloud services\" used within the organization.</li>\n<li>Agree on the site(s) to scan and determine the intensity of the process</li>\n<li>Ensure documented permission and schedule an appropriate time with the site host.</li>\n<li>In situations where the auditor is doing this work remotely it is important to only run \"safe\" tests that have no possibility of causing damage to the website. Be very careful about which automated scans you run to ensure that no aggressive or potentially damaging tests are included.</li>\n<li>Understand, discover and review the backup options the website has before starting the audit process.</li>\n</ul>"},"recommendations":{"html":"<p>Core recommendations are to always use well-supported, open source tools, and to minimize the use of interactive sites if not actually necessary. Removal of unused tools, demos, and default systems is highly encouraged.</p>\n<p>For interactive sites, content management systems and other frameworks, make sure the site is actively maintained, updated to the latest software and security patches regularly, and that the user permissions are reviewed periodically.</p>\n<p>Many automated scanning and reporting tools provide results of security problems it finds with differing levels of severity (<a href=\"https://code.google.com/p/zaproxy/wiki/HelpStartConceptsAlerts\">https://code.google.com/p/zaproxy/wiki/HelpStartConceptsAlerts</a>). Make special note of \"High\" severity issues and research the vulnerability and and recommendations suggested.</p>"},"summary":{"html":"<p>Organizational websites are often a central part of their work, but resource constraints can leave them vulnerable to a wide variety of attacks, from simple DDoS (Distributed Denial of Service) attacks to being leveraged for online scams and malicious advertisin to targeted distruction and subversion. Insecure websites can even be used in \"watering hole\" attacks where malware is implanted into the site to intentionally target the website's audience.</p>\n<p>This activity provides a SAFETAG auditor with a suite of processes and tools to investigate organization and project websites for potential vulnerabilities.  There are multiple ways to do this, from passive to more active scanning. SAFETAG takes great care to take a primarily passive approach to this work, especially when done off-site, so as not to have unintended consequences on the organization's infrastructure or undermine operational security concerns. Care should be taken to review operational security concerns, work closely with the organization, and pursue a minimal approach focused on the priorities of the organization. See also the <a href=\"https://safetag.org/activities/vulnerability_scanning\">Vulnerability Scanning activity</a> for additional tools and approaches useful for investigating outside of the website itself the server level.</p>"},"walk_through":{"html":"<p>Performing web vulnerability assessment can be done in different ways, using different tools and having different results. Choosing any of these steps or guides must not confuse an auditor, but instead, provide a broader scope which should help them finding vulnerabilities as many as they can.</p>\n<p>These vulnerabilities can range from:</p>\n<ul>\n<li>Web Server/OS level vulnerabilities</li>\n<li>Access control vulnerabilities</li>\n<li>Application-specific vulnerabilities</li>\n<li>Misconfiguration</li>\n<li>SQL Injection</li>\n<li>Cross-site Scripting</li>\n<li>Directory Traversal</li>\n<li>Failure to restrict URL Access</li>\n<li>Insufficient Transport Layer Protection</li>\n<li>LDAP Injections</li>\n<li>Malicious Codes</li>\n<li>Leaked information</li>\n</ul>\n<p>Before pursuing any of these more active scans, review outputs from passive reconnsaisance, DNS history and current information, and (if relevant) CMS version checking. This guide covers a small subset of web vulnerability scanning tools, a more comprehensive list is available at <a href=\"https://www.owasp.org/index.php/Category:Vulnerability_Scanning_Tools\">https://www.owasp.org/index.php/Category:Vulnerability_Scanning_Tools</a> which may provide approaches better suited to specific situations.</p>\n<p>OpenVAS, covered in the vulnerablity scanning activity, also includes Wapiti, which can help to detect many of the above common vulnerablitites.</p>\n<hr>\n<section><h6 id=\"variant-manual-testing-with-burp-active\">Variant: Manual Testing with Burp (Active)</h6><p><strong>Introduction</strong></p><p>According to Burp's official <a href=\"https://support.portswigger.net/customer/portal/articles/1783101-how-to-use-burp-suite\">documentation</a>, \"Burp Suite is an integrated platform for performing security testing of web applications. It is <strong>not a point-and-click</strong> tool, but is designed to be used by hands-on testers to support the testing process. With a little bit of effort, anyone can start using the core features of Burp to test the security of their applications. Some of Burp's more advanced features will take further learning and experience to master.\"  To know more about BurpSuite's other tools and features, visit BurpSuite's <a href=\"https://portswigger.net/burp/help/suite_burptools\">Tools</a> and it's <a href=\"https://portswigger.net/burp/help/suite_functions\">functions</a> pages.</p><p><strong>Requirements</strong></p><p>Note: If you are using Kali Linux, you already have Burpsuite pre-installed. Otherwise if you do not have a Linux box, refer to the following requirements below:</p><ul>\n<li>Windows/MAC OSX (Kali Linux Preferred)</li>\n<li><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html\">Java Runtime Environment</a></li>\n<li>Browser (<a href=\"https://www.google.com/chrome/index.html\">Chrome</a>, <a href=\"https://www.mozilla.org/en-US/firefox/new/\">Firefox</a>)</li>\n<li><a href=\"https://portswigger.net/burp\">BurpSuite</a></li>\n</ul><p>All of this investment is hugely worth it - Burp's user-driven workflow is by the far the most effective way to perform web security testing, and will take you way beyond the capabilities of any conventional point-and-click scanner. Burp is intuitive and user-friendly, and the best way to start learning is by doing. These steps will get you started with running Burp and using its basic features. You can then read on deeper into the documentation to become more proficient in using this supremely powerful tool.</p><p>Burp Suite contains various tools for performing different testing tasks. The tools operate effectively together, and you can pass interesting requests between tools as your work progresses, to carry out different actions.</p><p>To know more about BurpSuite's other tools and features, visit BurpSuite's <a href=\"https://portswigger.net/burp/help/suite_burptools\">Tools</a> and it's <a href=\"https://portswigger.net/burp/help/suite_functions\">functions</a> pages.</p><p>Burp's <a href=\"https://portswigger.net/burp/help/suite_gettingstarted\">Getting Started Documentation</a> is quite detailed and useful, and strongly recommends launching Burp from the command line for better control. In specific, it recommends assigning the amount of memory you wish to dedicate to burp:</p><p><strong>Requirements</strong></p><p>Note: If you are using Kali Linux, you already have Burpsuite pre-installed. Otherwise if you do not have a Linux box, refer to the following requirements below:</p><ul>\n<li>Windows/MAC OSX (Kali Linux Preferred)</li>\n<li><a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html\">Java Runtime Environment</a></li>\n<li>Browser (<a href=\"https://www.google.com/chrome/index.html\">Chrome</a>, <a href=\"https://www.mozilla.org/en-US/firefox/new/\">Firefox</a>)</li>\n<li><a href=\"https://portswigger.net/burp\">BurpSuite</a></li>\n</ul><p><strong>Launching Burpsuite</strong></p><p>With Java installed, on some platforms you may be able to run Burp directly by double-clicking the Burp JAR file. However, it is preferable to launch Burp from the command line, as this gives you more control over its execution, in particular the amount of memory that your computer assigns to Burp. To do this, in your command prompt type a command like:</p><pre><code>java -jar -Xmx1024m /path/to/burp.jar\n</code></pre><p>where 1024 is the amount of memory (in Mb) that you want to assign to Burp, and /path/to/burp.jar is the location of the Burp JAR file on your computer.</p><p>The <a href=\"https://portswigger.net/burp/help/suite_troubleshooting.html\">troubleshooting help</a> can help if Burp doesn't appear shortly.</p><p><strong>Setting up your environment</strong></p><ul>\n<li>\n<p>Verifying Scope/Target:</p>\n<ul>\n<li>Always check that you have the right URL/Domain before starting. Last thing we wanted to happen is to scan a different target that is out of our scope!</li>\n</ul>\n</li>\n<li>\n<p>Setting up your browser</p>\n<ul>\n<li>For Firefox:</li>\n<li>Paste <code>about:preferences#advanced</code> this in your URL, and click <code>Settings</code> left of <strong>Connection</strong></li>\n<li>Click <code>Manual proxy configuration</code> and enter <code>localhost</code> under <strong>HTTP Proxy</strong>, with Port set to: <code>8080</code></li>\n<li>Check <code>Use this proxy server for all protocols</code></li>\n<li>For Chrome:</li>\n<li>Paste <code>chrome://settings/system</code> then click <strong>Open proxy Settings</strong></li>\n<li>This will open the <strong>Network Setting* windows in Kali. Click **Network proxy</strong> and set <em>Method</em> to <code>Manual</code></li>\n<li>Set <strong>HTTP Proxy</strong> to <code>127.0.0.1</code> with <strong>Port</strong> valued at <code>8080</code></li>\n<li>Configure the rest of settings with following values above (HTTPS, FTP Proxies, and Socks Host)</li>\n</ul>\n</li>\n<li>\n<p>Setting up Socks Proxy (Optional)</p>\n<ul>\n<li>In some cases, you will be required to scan from an approved testing environment or a specific network/IP range. In this case, you have to configure Socks Proxy for your assessment.</li>\n<li>Verify your IP. Take note of your current IP address. (<a href=\"http://whatismyip.com/\">WhatismyIP.com</a>)</li>\n<li>To setup your Socks Proxy, we can do this by connecting via SSH to our server:</li>\n<li><code>ssh –D 9292 –l username@server_name/ip</code></li>\n<li>Once authenticated, configure Burpsuite to route it's traffic to our outbound SSH tunnel.</li>\n<li>From <strong>Options</strong> Tab, click <strong>Connections</strong> sub-tab and scroll down to <code>Socks Proxy</code></li>\n<li>In <strong>Socks Proxy host</strong>, type <code>localhost</code>. and under <strong>Socks Proxy port</strong>, type <code>9292</code></li>\n<li>Then check <strong>Use SOCKS proxy</strong> button</li>\n<li>You can again <a href=\"http://whatismyip.com/\">check</a> your IP address to verify if your configuration is correct.</li>\n</ul>\n</li>\n</ul><p><strong>Testing Burpsuite Configuration</strong></p><p><em>NOTE: Scanning web applications without the owner's permission is potentially illegal. It is important that you test Burpsuite on your own web applications, or on a controlled environment. There are some publicly available websites that are insecure by default to be used for testing and learning purposes. Among these were:</em></p><ul>\n<li><a href=\"http://www.itsecgames.co\">bWAPP</a> - Buggy Web Application</li>\n<li><a href=\"https://www.hackthis.co.uk\">HackThis</a> - Hacker's Playground</li>\n<li><a href=\"http://www.hackthissite.org/\">HackThisSite</a> - Community Driven hacking exercises</li>\n<li><a href=\"https://hack.me/s/\">HackMe</a> - Community based, collaborative hacking exercises and vulnerable web apps</li>\n<li><a href=\"http://crackme.cenzic.com/kelev/view/home.php\">CrackMeBank</a></li>\n</ul><p><em>(You can use these sites to get familiar with Burpsuite, and performing the following excerices in this guide.)</em></p><p><strong>Intercepting Request</strong></p><ul>\n<li>To start intercepting traffic to and from your target domain/URL, in your configured browser, enter the the target domain, and hit enter.</li>\n<li>On your Burpsuite instance, under <strong>Proxy</strong> Tab, and sub-tab <strong>Intercept</strong>, make sure that the <code>Intercept</code> button is on.</li>\n<li>If it captures the request from your Firefox browser, it means that your configuration is correct.</li>\n<li>Click <code>Forward</code> and the request will be forwarded to the server/target and the next sub-tab <strong>HTTP History</strong> will now start to generate some contents, each time you open a link, or a page within the target domain.</li>\n</ul><p><strong>Adding Target/Scope</strong></p><ul>\n<li>Adding your target into scope is important so you won't miss, or even scan URLs that are not included in your list of targets.</li>\n<li>To add the target to your scope, right-click the domain/website, then select <strong>Add to Scope</strong></li>\n<li>Burp will now tell you if you want ot stop sending out-of-scope items in your <strong>HTTP history</strong> tab and other Burp Tools - click <strong>Yes</strong>.</li>\n<li>This will now appear in your <strong>Target</strong> tab, and under <strong>Scope</strong> sub-tab.</li>\n<li>To add subdomains into your scope, you can use regex:\n<code>.*\\.test\\.com$</code></li>\n</ul><p><strong>Managing Burp Projects</strong></p><ul>\n<li>Managing burpsuites project will depend on the version you are using. Some features may not be available for free version of burp, but are only available for Pro Version. See burp's documentation for managing projects <a href=\"https://portswigger.net/burp/help/suite_burp_projects\">here</a></li>\n<li>\n<p>Selecting project type:</p>\n<ul>\n<li>Temporary project - Quick tasks, no need to save data</li>\n<li>New project on Disk - Creates new project and stores it on disk on a <a href=\"https://portswigger.net/burp/help/suite_burp_projects#projectfiles\">\"Burp project file\"</a></li>\n<li>Open existing project - Opens recent existing project from a <a href=\"https://portswigger.net/burp/help/suite_burp_projects#projectfiles\">\"Burp project file\"</a>. Scanners &#x26; spiders are paused.</li>\n</ul>\n</li>\n<li>\n<p>Selecting Configuration</p>\n<ul>\n<li>Burp Defaults - BurpSuite's default options</li>\n<li>Use options Saved within project - Only available when reopening an existing project. It uses the options saved from the previous project</li>\n<li>Load from a configuration file - Opens a project using the options contained on a <a href=\"https://portswigger.net/burp/help/suite_burp_projects#configfiles\">Burp Configuration File</a></li>\n</ul>\n</li>\n</ul><p><strong>NOTE:</strong> According to BurpSuite documentation, <em>\"If you open an existing project that was created by a different installation of Burp, then Burp will prompt you to decide whether to take full ownership of the project.</em></p><p><em>This decision is needed because Burp stores within the project file an identifier that is used to retrieve any ongoing Burp Collaborator interactions that are associated with the project. If two instances of Burp share the same identifier in ongoing work, then some Collaborator-based issues may be missed or incorrectly reported. You should only take full ownership of a project from a different Burp installation if no other instance of Burp is working on that project.\"</em></p><p>Since that Burpsuite is an advance tool for testing web applications, This guide will cover most of the basic testing activities for Burpsuite. To learn more of the advance features, it is important that you have a licensed version.</p><p><strong>Basic BurpSuite Testing Excercises:</strong></p><p>Attacking web application using simple payload set (Bruteforce attack):</p><ul>\n<li>\n<p>Verify that your Burp is working</p>\n<ul>\n<li>You must first try to test if your Burp and browser are both configured</li>\n</ul>\n</li>\n<li>\n<p>Login page of target application</p>\n<ul>\n<li>Now try visiting any login page of your target web application (you can use any test site mentioned above)</li>\n</ul>\n</li>\n<li>\n<p>\"Intercept On\" - Make sure that you have your burpsuite's intercept function set to \"ON\".</p>\n<ul>\n<li>Before you click \"ENTER\" to submit your sample credentials, you can intercept web traffic request from your browser to the server under <strong>Proxy</strong> > <strong>Intercept</strong> tab, then \"Intercept\" button is set to \"ON\".</li>\n</ul>\n</li>\n<li>\n<p>Review contents of the requests under <strong>Proxy</strong> > <strong>Intercept</strong> > <strong>Raw</strong></p>\n<ul>\n<li>On the <strong>Raw</strong> tab, Once you see the \"POST /login.php\" request of your browser to the web application server, select ALL and right-click on the selected/highlighted texts and select <strong>Send to Intruder</strong></li>\n</ul>\n</li>\n<li>Now under <strong>Intruder</strong> > <strong>number tab</strong> > <strong>Target</strong> uncheck \"Use HTTPs\".</li>\n<li>Now click under <strong>Intruder</strong> > <strong>number tab</strong> > <strong>Position</strong> to view all replaceble variables.</li>\n<li>\n<p>Try looking for <code>email</code> and <code>pass</code>,</p>\n<ul>\n<li>You can either change your variable for <code>email</code> and <code>pass</code> for earch or just include ONE variable. For this exercise, we will use the <code>pass</code> variable.</li>\n</ul>\n</li>\n<li>\n<p>Now under <strong>Intruder</strong> > <strong>Payloads</strong></p>\n<ul>\n<li>You can define here the number of payload sets depdening on  your attack type (for our case, since we only have 1, let's use 1)</li>\n</ul>\n</li>\n<li>Now below the options <code>Payload Sets</code>, you can see <code>Payload Options</code> where you can <code>add</code>, <code>Paste</code>, <code>add from list</code> strings that you can use as your payload.</li>\n<li>After typing your list of strings or passwords, let's go to <strong>Positions</strong> tab, and on the right side of <code>Payload Options</code>  click <strong>Start Attack</strong></li>\n<li>After clicking \"Start Attack\" it will open a window of results usually your HTTP responses codes.</li>\n</ul><p>Take note of these errors to see how the target web application respond when given certain types of strings.</p><p><strong>Setting up your environment</strong></p><p><strong>Selecting a Project</strong></p><p><strong>Selecting a Configuration</strong></p><p><strong>Opening a Project From a Different Burp Installation</strong></p><p><strong>Display Settings</strong></p><p><strong>The Basics of Using Burp</strong></p><hr></section>\n<section><h6 id=\"variant-owasp-zap-active\">Variant: OWASP ZAP (Active)</h6><p>OWASP ZAP allows an auditor to quickly identify common web vulnerabilities using the <a href=\"https://www.owasp.org/index.php/Main_Page\">OWASP framework</a> - either by a relatively intense spidering of the website or through a more tailored use of the proxy functionality of the tool.</p><p>OWASP ZAP provides a highly configurable tool to test for common website vulnerabilities. In addition to supporting organizational change to support general best practices for websites, OWASP can expose more specific vulnerabilties that may warrant action above and beyond general best practice work.</p><p>For a website that can be expected to withstand a dedicated spidering of its content, the automated mode will dig through and expose common vulnerabilities. The tool itself is relatively easy to use.</p><p>For more delicate sites, private sites, or other situations, OWASP can also proxy your web browser and test the pages you click through.</p><p>Quick Guide Setting up OWASP Zaproxy Scanner:</p><ol>\n<li>Download the latest version of Zaproxy from: <a href=\"https://github.com/zaproxy/zaproxy/wiki/Downloads\">https://github.com/zaproxy/zaproxy/wiki/Downloads</a></li>\n<li>\n<p>After installation, you will be brought into the OWASP Zaproxy's Session management page.</p>\n<ul>\n<li>Yes, I want to persist this session with name based on the current timestamp</li>\n<li>Yes, I want to persist this session but I want to specify the name and location</li>\n<li>No, I don't want to persist this session at this moment in time</li>\n<li>Remember my choice and do not ask me again</li>\n</ul>\n</li>\n</ol><p>Note: By default, ZAP sessions are always recorded to disk in a HSQLDB database with a default name and location. If you do not persist the session, those files are deleted when you exit ZAP.</p><p>ZAP User Interface:</p><p>The ZAP user interface consist of the following options:</p><table>\n<thead>\n<tr>\n<th>Options</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Menu Bar</td>\n<td>Provides access to many of the automated and manual tools</td>\n</tr>\n<tr>\n<td>Toolbar</td>\n<td>Includes buttons which provide easy access to most commonly used features</td>\n</tr>\n<tr>\n<td>Tree Window</td>\n<td>Displays the Sites tree and the Scripts tree</td>\n</tr>\n<tr>\n<td>Workspace Window</td>\n<td>Displays requests, responses, and scripts and allows you to edit them</td>\n</tr>\n<tr>\n<td>Information Window</td>\n<td>Displays details of the automated and manual tools</td>\n</tr>\n<tr>\n<td>Footer</td>\n<td>Displays a summary of the alerts found and the status of the main automated tools</td>\n</tr>\n</tbody>\n</table><p>Running Assessment:</p><p>Before you can run your assessment in ZAP, you need to configure your browser first to use ZAP as it's proxy. By default, ZAP uses:</p><p>Address:    localhost\nPort:       8080</p><p>Note: Remember that Burpsuite also uses the same Address and port no. Be reminded to close any of which application that you are not using.</p><p>Since that ZAP is acting as a proxy between your browser and the web application, the use of SSL(HTTPS) may cause the certificate validation to fail and the connection be terminated. This happen because ZAP encrypts and decrypts traffic sent to the web application using the original web applications certificate. This is done so ZAP can access the plaintext in the request and the response.</p><p>To prevent this, ZAP creates an SSL cert automatically for each host you access, and signed by ZAP's CA certificate. To setup your browser to trust these SSL certs, you need to import and trust the ZAP root CA certificate. Once it's done, the other ZAP certificates signed by it will be trusted as well.</p><p>Keep the self-generated Root CA certificate to avoid creating a vulnerability.</p><ol>\n<li>Start ZAP and click Tools -> Options.</li>\n<li>On the left pane of the Options window, click Dynamic SSL Certificates.</li>\n<li>On the right pane, click Save.</li>\n<li>Select a location to save the certificate to and click Save. Be sure to retain the .cer file extension.</li>\n</ol><p>To install the ZAP Root CA certificate as trusted root certificate for Windows/Chrome:</p><ol>\n<li>Browse to the certificate file location.</li>\n<li>Right-click on the certificate file and then click Install Certificate.</li>\n<li>In the Certificate Import Wizard, select either Current User or Local Machine as the scope of the certificate, then click Next.</li>\n<li>Select Place all certificates in the following store.</li>\n<li>Click Browse and select Trusted Root Certificate Authorities or Trusted Root Certificates (depending on your version of Windows) as the certificate store, then click Next.</li>\n<li>Click Finish.</li>\n<li>Review the security warning about trusted root certificates and click Yes if the warning is accepted.</li>\n</ol><p>To verify that the ZAP Root CA certificate is installed:</p><ol>\n<li>Open Control Panel and click Internet Options.</li>\n<li>On the Content tab, in the Certificates section, click Certificates.</li>\n<li>On the Trusted Root Certificates tab, verify that the OWASP ZAP Root CA certificate is listed.</li>\n</ol><p>If you are testing using Firefox, you need to install the ZAP Root CA certificate a second time\ninto Firefox’s own certificate store.</p><p>To install the ZAP Root CA for Mozilla Firefox:</p><ol>\n<li>Start Firefox and click Preferences.</li>\n<li>On the Advanced tab, click the Encryption tab.</li>\n<li>Click View Certificates.</li>\n<li>On the Trusted root certificates tab, click Import and select the ZAP Root CA file you saved previously.</li>\n<li>In the Import wizard, select Trust this CA to identify web sites.</li>\n<li>Click OK.</li>\n</ol><p>Additional OWASP ZAP references:</p><ul>\n<li><a href=\"https://code.google.com/p/zaproxy/wiki/HelpStartStart\">Wiki and QuickStart Guide</a></li>\n<li><a href=\"http://resources.infosecinstitute.com/which-weapon-should-i-choose-for-web-penetration-testing-3-0\">Overall walkthrough</a></li>\n<li>[Testing with Metasploitable VM](<a href=\"http://cyberarms.wordpress.com/2014/06/05/quick-and-easy-website-vulnerability-scans-with-owasp-zap/\">http://cyberarms.wordpress.com/2014/06/05/quick-and-easy-website-vulnerability-scans-with-owasp-zap/</a> (see also <a href=\"https://www.owasp.org/index.php/Webgoat\">https://www.owasp.org/index.php/Webgoat</a> and <a href=\"http://sourceforge.net/projects/samurai\">http://sourceforge.net/projects/samurai</a>)</li>\n<li><a href=\"https://blog.codecentric.de/en/2013/10/automated-security-testing-web-applications-using-owasp-zed-attack-proxy\">Walkthrough of automated mode</a></li>\n<li><a href=\"https://blog.42.nl/articles/securing-web-applications-using-owasp-zap-passive-mode\">Walkthrough of proxy usage</a></li>\n</ul><hr></section>\n<section><h6 id=\"variant-nikto-web-scanner-active\">Variant: Nikto Web Scanner (Active)</h6><p><strong>Introduction</strong></p><p>Nikto is a tool that comes with Kali Linux. It's an easy tool to use in performing web vulnerability scan. According to Nikto's main page:</p><p>\"Nikto is an Open Source (GPL) web server scanner which performs comprehensive tests against web servers for multiple items, including over 6700 potentially dangerous files/programs, checks for outdated versions of over 1250 servers, and version specific problems on over 270 servers. It also checks for server configuration items such as the presence of multiple index files, HTTP server options, and will attempt to identify installed web servers and software. Scan items and plugins are frequently updated and can be automatically updated\"</p><p>In your Kali Linux you can use Nikto by:</p><ol>\n<li>Go to <code>Applications</code> > <code>Web Application Analysis</code> > <code>Web Vulnerability Scanners</code> > <code>Nikto</code></li>\n<li>Go to <code>Applications</code> > <code>System</code> > <code>Root Terminal</code></li>\n</ol><p><strong>Using Nikto to Scan Web Application</strong></p><table>\n<thead>\n<tr>\n<th>Nikto Command</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>nikto -Display V -h http://targetdomain.com</code></td>\n<td>Execute a simple scan. <code>-Display</code> to Display background process, <code>V</code> for verbose.</td>\n</tr>\n<tr>\n<td><code>nikto -Display V -o scan_result.html -Format html -h http://targetdomain.com</code></td>\n<td>Saving Nikto's output into the file <code>result.txt</code>. You can specify the format of the output file using the <strong>-Format</strong> option (csv, html, msf, xml, txt)</td>\n</tr>\n<tr>\n<td><code>nikto -userproxy -h http://targetdomain.com</code></td>\n<td>Scanning via proxy. Edit Nikto's configuration file in <code>/etc/nikto.config.txt</code>, and edit the values of <strong>PROXYHOST=XXX.XXX.XXX.XXX</strong> and <strong>PROXYPORT=XXXX</strong> to the corresponing values of your proxy.</td>\n</tr>\n<tr>\n<td><code>nikto -Tuning (x) N -h http://targetdomain.com</code></td>\n<td>Tuning options will control the test that Nikto will use against a target. Replace <code>N</code> with the number option below. Enable <code>x</code> if using only single option. The given string will be parsed from left to right, any x characters will apply to all characters to the right of the character.</td>\n</tr>\n</tbody>\n</table><ol start=\"0\">\n<li>File Upload</li>\n<li>Interesting File / Seen in logs</li>\n<li>Misconfiguration / Default File</li>\n<li>Information Disclosure</li>\n<li>Injection (XSS/Script/HTML)</li>\n<li>Remote File Retrieval - Inside Web Root</li>\n<li>Denial of Service</li>\n<li>Remote File Retrieval - Server Wide</li>\n<li>Command Execution / Remote Shell</li>\n<li>\n<p>SQL Injection\na. Authentication Bypass\nb. Software Identification\nc. Remote Source Inclusion\nx. Reverse Tuning Options (i.e., include all except specified)</p>\n<hr>\n<h6 id=\"variant-reputation-and-phishing-domain-checks\">Variant: Reputation and Phishing Domain Checks</h6>\n</li>\n</ol><p>Search for the existence of domains which impersonate the spelling and appearance of the organization's name or website. These websites can be used in phishing campaigns to convince a victim that they are interacting with a legitimate website. They can also be used to house malware or spread disinformation and damage the reputation of an organization.</p><p>Search for the organization's existing domain name using the <a href=\"https://github.com/elceef/dnstwist\">command line utility DNStwist</a> or utilise a hosted version of the tool at <a href=\"https://dnstwist.it/\">https://dnstwist.it/</a>.</p><hr></section>"}}}}}},"pageContext":{"slug":"/activities/web_vulnerability_assessment"}},"staticQueryHashes":["3649515864","63159454"]}