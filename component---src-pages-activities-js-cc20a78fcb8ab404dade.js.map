{"version":3,"sources":["webpack:///./src/pages/activities.js","webpack:///./src/styles/card.js","webpack:///./src/styles/inpage.js"],"names":["MethodHeadline","styled","InpageHeadline","media","mediumUp","ActivityCard","Card","CardHeading","Activities","data","title","columnLayout","size","variation","withDeco","allFile","edges","map","index","node","fields","childMarkdownRemark","frontmattermd","summary","key","border","as","Link","to","slug","withHover","frontmatter","excerpt","query","getCardBorder","themeVal","article","glsp","_lighten","css","CardHeader","div","Heading","CardList","ul","listReset","smallUp","largeUp","Inpage","InpageInnerColumns","Constrainer","InpageHeader","header","isHidden","visuallyHidden","InpageHeaderInner","InpageTitle","props","InpageBody","p","headingAlt","section","InpageBodyInner"],"mappings":"qWAoBA,IAAMA,EAAiBC,YAAOC,KAAV,gFAAGD,CAAH,QAChBE,IAAMC,SADU,MAMdC,EAAeJ,YAAOK,KAAV,8EAAGL,CAAH,6EAIdM,KA6DWC,UAtDf,YAA+B,IAATC,EAAQ,EAARA,KACpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,eACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAoBC,aAAa,OAC/B,kBAACX,EAAD,KACE,kBAAC,IAAD,CAAaY,KAAK,QAAQC,UAAU,UAAUC,UAAQ,GAAtD,iBAMN,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGL,EAAKM,QAAQC,MAAMC,KAClB,WAAWC,GAAX,IAAGC,EAAH,EAAGA,KAAH,OACiB,MAAfA,EAAKC,QACLD,EAAKE,oBAAoBD,OAAOE,cAAcC,SAC5C,wBAAIC,IAAKN,GACP,kBAACb,EAAD,CACEQ,UAAU,YACVY,OAAO,UACPC,GAAIC,IACJC,GAAIT,EAAKC,OAAOS,KAChBC,WAAS,GAET,kBAAC,IAAD,CAAajB,UAAU,WACpBM,EAAKE,oBAAoBU,YAAYrB,OAExC,2BAEIS,EAAKE,oBAAoBD,OAAOE,cAC7BC,QAAQS,oBAqBhC,IAAMC,EAAK,a,4bCtFlB,IAUMC,EAAgB,SAAC,GAAgB,IAAdT,EAAa,EAAbA,OACvB,MAAe,SAAXA,EAA0BU,YAAS,cACxB,YAAXV,EAA6BU,YAAS,iBAC3B,cAAXV,EAA+BU,YAAS,mBAC7B,UAAXV,EAA2BU,YAAS,iBACjC,WAGH7B,EAAOL,IAAOmC,QAAV,iEAAGnC,CAAH,sNACGoC,YAAK,GAAMA,YAAK,KAGlBF,YAAS,eAtBM,SAAC,GAAmB,IAAjBtB,EAAgB,EAAhBA,UAC3B,MAAkB,SAAdA,EAA6ByB,YAAS,IAAMH,YAAS,eACvC,YAAdtB,EAAgCyB,YAAS,GAAKH,YAAS,kBACzC,cAAdtB,EACKyB,YAAS,KAAOH,YAAS,oBAChB,UAAdtB,EAA8ByB,YAASH,YAAS,GAAK,kBACvC,YAAdtB,EAAgC,cAC7B,WAkBL,qBAAGY,QAEHc,YADM,0BAEgBL,KAGPG,YAAK,GAGXF,YAAS,cAITA,YAAS,eAOlB,qBAAGL,WAEHS,YADS,mRAWeL,MAcb5B,MAER,IAAMkC,EAAavC,IAAOwC,IAAV,uEAAGxC,CAAH,4FAYVM,EAAcN,YAAOyC,KAAV,wEAAGzC,CAAH,8DACLoC,eASNM,GAJa1C,IAAOwC,IAAV,uEAAGxC,CAAH,sBAICA,IAAO2C,GAAV,qEAAG3C,CAAH,6HACjB4C,cAGUR,YAAK,GACf/B,EAOEH,IAAM2C,QAZS,KAiBf3C,IAAM4C,QAjBS,Q,2qBC3FrB,IAOaC,EAAS/C,IAAOmC,QAAV,qEAAGnC,CAAH,2DAMNgD,EAAqBhD,YAAOiD,KAAV,iFAAGjD,CAAH,iKAGdoC,YAAK,GACFA,YAAK,GACrBlC,IAAMC,SALqB,KAbP,SAAC,GAAsB,IAApBO,EAAmB,EAAnBA,aACzB,MAAqB,QAAjBA,EAA+B,UACd,QAAjBA,EAA+B,UACd,QAAjBA,EAA+B,UAC5B,YAgBE0B,YAAK,GACGA,YAAK,IAEN/B,IAMZH,IAAMC,SAhBmB,MAsBlB+C,EAAelD,IAAOmD,OAAV,2EAAGnD,CAAH,6BAErB,qBAAGoD,UAEHd,YADQ,QAEJe,iBAEYjB,YAAK,IAGZkB,EAAoBtD,YAAOiD,KAAV,gFAAGjD,CAAH,wFAIjBoC,YAAK,GAAMA,eAGXnC,EAAiBD,IAAOwC,IAAV,6EAAGxC,CAAH,oHAKNoC,cAGAA,eAmBRmB,GAfgBvD,IAAOwC,IAAV,4EAAGxC,CAAH,4FAIRoC,YAAK,IAIWpC,IAAOwC,IAAV,iFAAGxC,CAAH,qEAIZoC,YAAK,MAGGpC,aAAO,gBAAMwD,EAAN,2BAAkB,kBAAC,IAAYA,MAAzC,0EAAGxD,CAAH,wCACLoC,YAAK,MAiDXqB,GA7CgBzD,IAAO0D,EAAV,4EAAG1D,CAAH,6CACtB2D,eA4CsB3D,IAAO4D,QAAV,yEAAG5D,CAAH,2GAvCD,SAAC,GAAmB,IAAjBY,EAAgB,EAAhBA,UACvB,MAAkB,SAAdA,EACK0B,YAAP,+HACsBJ,YAAS,cAElBA,YAAS,iBACFA,YAAS,iBAEHA,YAAS,iBAGpBA,YAAS,kBAKH,SAAdtB,EACA0B,YAAP,oJACsBJ,YAAS,iBAElBA,YAAS,iBACFA,YAAS,iBAEHA,YAAS,iBAGpBA,YAAS,iBAITA,YAAS,kBAInBI,YAAP,qCAQiBF,YAAK,GACFA,YAAK,KASdyB,EAAkB7D,YAAOiD,KAAV,+EAAGjD,CAAH,wCACfoC,YAAK,GAAMA,cAGTA","file":"component---src-pages-activities-js-cc20a78fcb8ab404dade.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\nimport { Link, graphql } from \"gatsby\"\n\nimport GlobalLayout from \"../components/layouts/global-layout\"\nimport SEO from \"../components/seo\"\n\nimport {\n  Inpage,\n  InpageInnerColumns,\n  InpageHeader,\n  InpageHeadline,\n  InpageBody,\n  InpageBodyInner,\n  InpageTitle,\n} from \"../styles/inpage\"\nimport Card, { CardHeading, CardList } from \"../styles/card\"\nimport media from \"../styles/utils/media-queries\"\n\nconst MethodHeadline = styled(InpageHeadline)`\n  ${media.mediumUp`\n    grid-column: span 2;\n  `}\n`\n\nconst ActivityCard = styled(Card)`\n  > :last-child:not(:first-child) {\n    padding-top: 0;\n  }\n  ${CardHeading} {\n    &:after {\n      content: \"_\";\n    }\n  }\n`\n\nfunction Activities({ data }) {\n  return (\n    <GlobalLayout>\n      <SEO title=\"Activities\" />\n      <Inpage>\n        <InpageHeader>\n          <InpageInnerColumns columnLayout=\"3:1\">\n            <MethodHeadline>\n              <InpageTitle size=\"jumbo\" variation=\"primary\" withDeco>\n                Activities\n              </InpageTitle>\n            </MethodHeadline>\n          </InpageInnerColumns>\n        </InpageHeader>\n        <InpageBody>\n          <InpageBodyInner>\n            <CardList>\n              {data.allFile.edges.map(\n                ({ node }, index) =>\n                  node.fields != null &&\n                  node.childMarkdownRemark.fields.frontmattermd.summary && (\n                    <li key={index}>\n                      <ActivityCard\n                        variation=\"secondary\"\n                        border=\"primary\"\n                        as={Link}\n                        to={node.fields.slug}\n                        withHover\n                      >\n                        <CardHeading variation=\"primary\">\n                          {node.childMarkdownRemark.frontmatter.title}\n                        </CardHeading>\n                        <p>\n                          {\n                            node.childMarkdownRemark.fields.frontmattermd\n                              .summary.excerpt\n                          }\n                        </p>\n                      </ActivityCard>\n                    </li>\n                  )\n              )}\n            </CardList>\n          </InpageBodyInner>\n        </InpageBody>\n      </Inpage>\n    </GlobalLayout>\n  )\n}\n\nActivities.propTypes = {\n  data: PropTypes.array,\n}\n\nexport default Activities\n\nexport const query = graphql`\n  query {\n    allFile(\n      filter: {\n        relativeDirectory: { eq: \"activities\" }\n        internal: { mediaType: { eq: \"text/markdown\" } }\n      }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          childMarkdownRemark {\n            frontmatter {\n              title\n            }\n            fields {\n              frontmattermd {\n                summary {\n                  excerpt\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import styled, { css } from \"styled-components\"\nimport { themeVal } from \"./utils/general\"\nimport media from \"./utils/media-queries\"\nimport { glsp, _lighten } from \"./utils/theme-values\"\nimport { listReset } from \"./helpers/index\"\nimport Heading from \"./type/heading\"\n\nconst getCardBackground = ({ variation }) => {\n  if (variation === \"base\") return _lighten(0.75, themeVal(\"color.base\"))\n  if (variation === \"primary\") return _lighten(0.5, themeVal(\"color.primary\"))\n  if (variation === \"secondary\")\n    return _lighten(0.525, themeVal(\"color.secondary\"))\n  if (variation === \"white\") return _lighten(themeVal(0.5, \"color.surface\"))\n  if (variation === \"outline\") return \"transparent\"\n  return \"white\"\n}\n\nconst getCardBorder = ({ border }) => {\n  if (border === \"base\") return themeVal(\"color.base\")\n  if (border === \"primary\") return themeVal(\"color.primary\")\n  if (border === \"secondary\") return themeVal(\"color.secondary\")\n  if (border === \"white\") return themeVal(\"color.surface\")\n  return \"inherit\"\n}\n\nconst Card = styled.article`\n  padding: ${glsp(2)} ${glsp(1.5)};\n  display: flex;\n  flex-flow: column;\n  color: ${themeVal(\"color.base\")};\n  background: ${getCardBackground};\n  position: relative;\n  ${({ border }) =>\n    border &&\n    css`\n      border: 2px solid ${getCardBorder};\n    `}\n  & > :last-child:not(:first-child) {\n    padding-top: ${glsp(2)};\n  }\n  &:visited {\n    color: ${themeVal(\"color.base\")};\n  }\n  a,\n  a:visited {\n    color: ${themeVal(\"color.link\")};\n  }\n\n  h1, h2, h3 {\n    margin: 0;\n  }\n  /* offset box outline on hover style requires 'withHover' prop */\n  ${({ withHover }) =>\n    withHover &&\n    css`\n      &:after {\n        position: absolute;\n        content: \"\";\n        opacity: 0;\n        width: 100%;\n        height: 100%;\n        left: 0;\n        top: 0;\n        z-index: -1;\n        border: 2px solid ${getCardBorder};\n        background: none;\n        transition: all 0.16s cubic-bezier(0.55, 0.085, 0.68, 0.53);\n      }\n      &:hover {\n        &:after {\n          opacity: 1;\n          transform: translate(10px, 10px);\n          transition-delay: 0.08s;\n        }\n      }\n    `}\n`\n\nexport default Card\n\nexport const CardHeader = styled.div`\n  display: flex;\n  align-items: flex-start;\n  img {\n    max-height: 2rem;\n    margin-right: 1rem;\n  }\n  h1 {\n    flex: 1;\n  }\n`\n\nexport const CardHeading = styled(Heading)`\n  margin-bottom: ${glsp()};\n  position: relative;\n  letter-spacing: 0.5px;\n`\n\nexport const CardFooter = styled.div`\n  margin-top: auto;\n`\n\nexport const CardList = styled.ul`\n  ${listReset()};\n  display: grid;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: ${glsp(2)};\n  ${Card} {\n    height: 100%;\n  }\n  li {\n    grid-column: auto / span 6;\n\n    /* Small up */\n    ${media.smallUp`\n      grid-column: auto / span 3;\n    `}\n\n    /* Large up */\n    ${media.largeUp`\n      grid-column: auto / span 2;\n    `}\n  }\n`\n","import React from \"react\"\nimport styled, { css } from \"styled-components\"\n\nimport { visuallyHidden } from \"./helpers\"\nimport { themeVal } from \"./utils/general\"\nimport { glsp } from \"./utils/theme-values\"\nimport Heading, { headingAlt } from \"./type/heading\"\nimport Constrainer from \"./constrainer\"\nimport Card from \"./card\"\nimport media from \"./utils/media-queries\"\n\nconst getColumnLayout = ({ columnLayout }) => {\n  if (columnLayout === \"1:1\") return \"1fr 1fr\"\n  if (columnLayout === \"2:1\") return \"2fr 1fr\"\n  if (columnLayout === \"3:1\") return \"3fr 1fr\"\n  return \"inherit\"\n}\n\nexport const Inpage = styled.article`\n  display: grid;\n  height: 100%;\n  grid-template-rows: auto 1fr;\n`\n\nexport const InpageInnerColumns = styled(Constrainer)`\n  display: grid;\n  grid-template-columns: 1fr;\n  padding-top: ${glsp(1)};\n  padding-bottom: ${glsp(2)};\n  ${media.mediumUp`\n    grid-template-columns: ${getColumnLayout};\n    gap: ${glsp(4)};\n    padding-top: ${glsp(2)};\n  `}\n  & > section > ${Card} {\n    margin-top: 1rem;\n    display: block;\n  }\n  & > * {\n    margin-bottom: 2rem;\n    ${media.mediumUp`\n      margin-bottom: 0;\n    `}\n  }\n`\n\nexport const InpageHeader = styled.header`\n  /* Visually hidden */\n  ${({ isHidden }) =>\n    isHidden &&\n    css`\n      ${visuallyHidden()}\n    `}\n  padding-bottom: ${glsp(2)};\n`\n\nexport const InpageHeaderInner = styled(Constrainer)`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: space-between;\n  padding: ${glsp(4)} ${glsp()};\n`\n\nexport const InpageHeadline = styled.div`\n  display: flex;\n  flex-flow: column;\n  min-width: 0;\n  > *:first-child {\n    margin-bottom: ${glsp()};\n  }\n  > *:last-child {\n    margin-bottom: ${glsp()};\n  }\n`\n\nexport const InpageToolbar = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding-left: ${glsp(2)};\n  margin-left: auto;\n`\n\nexport const InpageTitleWrapper = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  min-width: 0;\n  margin-bottom: ${glsp(1.5)};\n`\n\nexport const InpageTitle = styled(({ ...props }) => <Heading {...props} />)`\n  margin-bottom: ${glsp(0.5)};\n  line-height: 3rem;\n`\n\nexport const InpageTagline = styled.p`\n  ${headingAlt()}\n  font-size: 0.875rem;\n  line-height: 1rem;\n`\n\nconst getBodyStyles = ({ variation }) => {\n  if (variation === \"dark\")\n    return css`\n      background-color: ${themeVal(\"color.base\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n      }\n    `\n  else if (variation === \"blue\")\n    return css`\n      background-color: ${themeVal(\"color.primary\")};\n      & * {\n        color: ${themeVal(\"color.surface\")};\n        border-color: ${themeVal(\"color.surface\")};\n        &:after {\n          background-color: ${themeVal(\"color.surface\")};\n        }\n        a {\n          color: ${themeVal(\"color.surface\")};\n          text-decoration: underline;\n        }\n        a:visited {\n          color: ${themeVal(\"color.surface\")};\n        }\n      }\n    `\n  return css`\n    background-color: transparent;\n  `\n}\n\nexport const InpageBody = styled.section`\n  ${getBodyStyles};\n  & ~ & {\n    padding-top: ${glsp(2)};\n    padding-bottom: ${glsp(2)};\n  }\n  p > img {\n    display: block;\n    margin: 1rem auto;\n    max-width: 100%;\n  }\n`\n\nexport const InpageBodyInner = styled(Constrainer)`\n  padding: ${glsp(2)} ${glsp()};\n\n  & ~ & {\n    padding: ${glsp()};\n  }\n`\n"],"sourceRoot":""}